{"version":3,"sources":["hw1/TodoListInputFunction.js","hw1/TodoListContentFunction.js","hw1/TodoListFilterFunction.js","hw1/App.js","reportWebVitals.js","index.js"],"names":["TodoListInputWrapper","styled","div","InputFunctions","input","InputButton","button","TodoListInputFunction","value","handleButtonClick","handleInputChange","placeholder","onChange","onClick","TodoListContentFilter","ContentFunctions","Status","Content","props","isDone","Delete","TodoListContentFunction","todo","handleDeleteTodo","handleToggleDone","id","content","FilterWrapper","FilterFunctions","FilterButton","TodoListFilterFunction","handleFilterAll","handleFilterNotYet","handleFilterDone","handleCleanUp","TodoListWrapper","TodoListTitle","App","React","useState","setValue","todos","setTodos","filter","setFilter","map","className","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mjBAGA,IAAMA,EAAuBC,IAAOC,IAAV,KAIpBC,EAAiBF,IAAOG,MAAV,KAKdC,EAAcJ,IAAOK,OAAV,KAwBFC,MAjBf,YAII,IAHFC,EAGC,EAHDA,MACAC,EAEC,EAFDA,kBACAC,EACC,EADDA,kBAEA,OACE,eAACV,EAAD,WACE,cAACG,EAAD,CACEQ,YAAY,uFACZH,MAAOA,EACPI,SAAUF,IAEZ,cAACL,EAAD,CAAaQ,QAAS,kBAAMJ,KAA5B,oC,6rBC7BN,IAAMK,EAAwBb,IAAOC,IAAV,KAIrBa,EAAmBd,IAAOC,IAAV,KAKhBc,EAASf,IAAOC,IAAV,KAQNe,EAAUhB,IAAOC,IAAV,KAET,SAACgB,GAAD,OACAA,EAAMC,QAAN,6CAMEC,EAASnB,IAAOK,OAAV,KAiCGe,MA1Bf,YAAgF,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,iBACzD,OACE,cAACV,EAAD,UACE,eAACC,EAAD,WACE,cAACC,EAAD,CACEH,QAAS,WACPW,EAAiBF,EAAKG,KAF1B,SAKGH,EAAKH,OAAS,sBAAS,wBAE1B,cAACF,EAAD,CAASE,OAAQG,EAAKH,OAAtB,SAA+BG,EAAKI,UACpC,8BACE,cAACN,EAAD,CACEP,QAAS,WACPU,EAAiBD,EAAKG,KAF1B,kC,6VC9CV,IAAME,EAAgB1B,IAAOC,IAAV,KAGb0B,EAAkB3B,IAAOC,IAAV,KACf2B,EAAe5B,IAAOK,OAAV,KA4BHwB,MAlBf,YAKI,IAJFC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,mBACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,cAEA,OACE,cAACP,EAAD,UACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAchB,QAASkB,EAAvB,0BACA,cAACF,EAAD,CAAchB,QAASmB,EAAvB,gCACA,cAACH,EAAD,CAAchB,QAASoB,EAAvB,gCACA,cAACJ,EAAD,CAAchB,QAASqB,EAAvB,sC,sVCtBR,IAAMC,EAAkBlC,IAAOC,IAAV,KAOfkC,EAAgBnC,IAAOC,IAAV,KAOfuB,EAAK,EAmGMY,MAjGf,WAAgB,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBACN/B,EADM,KACCgC,EADD,OAEaF,IAAMC,SAAS,CACvC,CAAEd,GAAI,EAAGC,QAAS,MAAOP,QAAQ,GACjC,CAAEM,GAAI,EAAGC,QAAS,qBAAOP,QAAQ,KAJtB,mBAENsB,EAFM,KAECC,EAFD,OAOeJ,IAAMC,SAAS,OAP9B,mBAONI,EAPM,KAOEC,EAPF,KA0BPrB,EAAmB,SAACE,GACxBiB,EAASD,EAAME,QAAO,SAACrB,GAAD,OAAUA,EAAKG,KAAOA,OAGxCD,EAAmB,SAACC,GACxBiB,EACED,EAAMI,KAAI,SAACvB,GACT,OAAIA,EAAKG,KAAOA,EAAWH,EACpB,2BACFA,GADL,IAEEH,QAASG,EAAKH,cAsBtB,OACE,qBAAK2B,UAAU,MAAf,SACE,eAACX,EAAD,WACE,cAACC,EAAD,4BACA,cAAC,EAAD,CACE3B,kBAlDkB,WACxBiC,EAAS,CACP,CACEjB,GAAIA,EACJC,QAASlB,EACTW,QAAQ,IAJJ,mBAMHsB,KAELhB,IACAe,EAAS,KAyCH9B,kBAvDkB,SAACqC,GACzBP,EAASO,EAAEC,OAAOxC,QAuDZA,MAAOA,IAERiC,EACEE,QAAO,SAACrB,GACP,MAAe,QAAXqB,IAGW,cAAXA,EACKrB,EAAKH,OACQ,WAAXwB,GACDrB,EAAKH,YADR,MAIR0B,KAAI,SAACvB,GAAD,OACH,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkBA,EAClBC,iBAAkBA,GAHbF,EAAKG,OAMhB,cAAC,EAAD,CACEM,gBA7CgB,WACtBa,EAAU,QA6CJZ,mBA1CmB,WACzBY,EAAU,WA0CJX,iBAvCiB,WACvBW,EAAU,cAuCJV,cApCc,WACpBQ,EAAS,aCjEEO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fdc608da.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React from \"react\";\n\nconst TodoListInputWrapper = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst InputFunctions = styled.input`\n  width: 300px;\n  padding: 5px;\n  border: 0px;\n`;\nconst InputButton = styled.button`\n  color: #8c495e;\n  background: #d1d1c2;\n  margin-left: 20px;\n  cursor: pointer;\n`;\n\nfunction TodoListInputFunction({\n  value,\n  handleButtonClick,\n  handleInputChange,\n}) {\n  return (\n    <TodoListInputWrapper>\n      <InputFunctions\n        placeholder=\"嘿嘿！有什麼要我幫忙記的嗎？\"\n        value={value}\n        onChange={handleInputChange}\n      />\n      <InputButton onClick={() => handleButtonClick()}>按我！</InputButton>\n    </TodoListInputWrapper>\n  );\n}\n\nexport default TodoListInputFunction;\n","import styled from \"styled-components\";\n\nconst TodoListContentFilter = styled.div`\n  text-align: center;\n  margin: 10px;\n`;\nconst ContentFunctions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n`;\nconst Status = styled.div`\n  color: #8c495e;\n  border: 1px solid;\n  font-size: 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  padding: 3px 2px;\n`;\nconst Content = styled.div`\n  color: #8c495e;\n  ${(props) =>\n    props.isDone &&\n    `\n    text-decoration:line-through;\n  `}\n`;\n\nconst Delete = styled.button`\n  color: #8c495e;\n  background: #d1d1c2;\n  margin-left: 20px;\n  cursor: pointer;\n`;\n\nfunction TodoListContentFunction({ todo, handleDeleteTodo, handleToggleDone }) {\n  return (\n    <TodoListContentFilter>\n      <ContentFunctions>\n        <Status\n          onClick={() => {\n            handleToggleDone(todo.id);\n          }}\n        >\n          {todo.isDone ? \"已完成!\" : \"待執行!\"}\n        </Status>\n        <Content isDone={todo.isDone}>{todo.content}</Content>\n        <div>\n          <Delete\n            onClick={() => {\n              handleDeleteTodo(todo.id);\n            }}\n          >\n            刪除\n          </Delete>\n        </div>\n      </ContentFunctions>\n    </TodoListContentFilter>\n  );\n}\n\nexport default TodoListContentFunction;\n","import styled from \"styled-components\";\n\nconst FilterWrapper = styled.div`\n  margin: 0px auto;\n`;\nconst FilterFunctions = styled.div``;\nconst FilterButton = styled.button`\n  background: #74a38c;\n  color: #d1d1c2;\n  margin: 10px;\n  cursor: pointer;\n  &:hover {\n    color: white;\n  }\n`;\n\nfunction TodoListFilterFunction({\n  handleFilterAll,\n  handleFilterNotYet,\n  handleFilterDone,\n  handleCleanUp,\n}) {\n  return (\n    <FilterWrapper>\n      <FilterFunctions>\n        <FilterButton onClick={handleFilterAll}>全部</FilterButton>\n        <FilterButton onClick={handleFilterNotYet}>還沒做</FilterButton>\n        <FilterButton onClick={handleFilterDone}>做完的</FilterButton>\n        <FilterButton onClick={handleCleanUp}>清光光</FilterButton>\n      </FilterFunctions>\n    </FilterWrapper>\n  );\n}\n\nexport default TodoListFilterFunction;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport TodoListInputFunction from \"./TodoListInputFunction.js\";\nimport TodoListContentFunction from \"./TodoListContentFunction.js\";\nimport TodoListFilterFunction from \"./TodoListFilterFunction.js\";\n\nconst TodoListWrapper = styled.div`\n  margin: 50px auto;\n  background: #d1d1c2;\n  width: 450px;\n  border: 3px solid #74a38c;\n  text-align: center;\n`;\nconst TodoListTitle = styled.div`\n  color: #8c495e;\n  padding: 10px;\n  font-size: 30px;\n  font-family: monospace;\n`;\n\nlet id = 3;\n\nfunction App() {\n  const [value, setValue] = React.useState(\"\");\n  const [todos, setTodos] = React.useState([\n    { id: 2, content: \"abc\", isDone: true },\n    { id: 1, content: \"怎麼辦\", isDone: false },\n  ]);\n\n  const [filter, setFilter] = React.useState(\"all\");\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleButtonClick = () => {\n    setTodos([\n      {\n        id: id,\n        content: value,\n        isDone: false,\n      },\n      ...todos,\n    ]);\n    id++;\n    setValue(\"\");\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleFilterAll = () => {\n    setFilter(\"all\");\n  };\n\n  const handleFilterNotYet = () => {\n    setFilter(\"notYet\");\n  };\n\n  const handleFilterDone = () => {\n    setFilter(\"completed\");\n  };\n\n  const handleCleanUp = () => {\n    setTodos([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <TodoListWrapper>\n        <TodoListTitle>I am TodoList</TodoListTitle>\n        <TodoListInputFunction\n          handleButtonClick={handleButtonClick}\n          handleInputChange={handleInputChange}\n          value={value}\n        />\n        {todos\n          .filter((todo) => {\n            if (filter === \"all\") {\n              return true;\n            }\n            if (filter === \"completed\") {\n              return todo.isDone;\n            } else if (filter === \"notYet\") {\n              return !todo.isDone;\n            }\n          })\n          .map((todo) => (\n            <TodoListContentFunction\n              key={todo.id}\n              todo={todo}\n              handleDeleteTodo={handleDeleteTodo}\n              handleToggleDone={handleToggleDone}\n            />\n          ))}\n        <TodoListFilterFunction\n          handleFilterAll={handleFilterAll}\n          handleFilterNotYet={handleFilterNotYet}\n          handleFilterDone={handleFilterDone}\n          handleCleanUp={handleCleanUp}\n        />\n      </TodoListWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./hw1/App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}